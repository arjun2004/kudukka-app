"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_thirdweb_dist_esm_wallets_wallet-connect_controller_js"],{

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/wallet-connect/controller.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/wallet-connect/controller.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   autoConnectWC: function() { return /* binding */ autoConnectWC; },\n/* harmony export */   connectWC: function() { return /* binding */ connectWC; },\n/* harmony export */   isWalletConnect: function() { return /* binding */ isWalletConnect; }\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! viem */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/typedData.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! viem */ \"(app-pages-browser)/./node_modules/viem/_esm/errors/rpc.js\");\n/* harmony import */ var _analytics_track_transaction_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../analytics/track/transaction.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/analytics/track/transaction.js\");\n/* harmony import */ var _chains_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../chains/utils.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/chains/utils.js\");\n/* harmony import */ var _utils_address_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/address.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/address.js\");\n/* harmony import */ var _utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/encoding/hex.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/encoding/hex.js\");\n/* harmony import */ var _utils_json_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../utils/json.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/json.js\");\n/* harmony import */ var _utils_signatures_helpers_parse_typed_data_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../utils/signatures/helpers/parse-typed-data.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/signatures/helpers/parse-typed-data.js\");\n/* harmony import */ var _utils_storage_walletStorage_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/storage/walletStorage.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/storage/walletStorage.js\");\n/* harmony import */ var _utils_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/url.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/url.js\");\n/* harmony import */ var _generated_getWalletInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../__generated__/getWalletInfo.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/__generated__/getWalletInfo.js\");\n/* harmony import */ var _utils_chains_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../utils/chains.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/utils/chains.js\");\n/* harmony import */ var _utils_defaultDappMetadata_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/defaultDappMetadata.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/utils/defaultDappMetadata.js\");\n/* harmony import */ var _utils_normalizeChainId_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/normalizeChainId.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/utils/normalizeChainId.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constants.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/wallet-connect/constants.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst ADD_ETH_CHAIN_METHOD = \"wallet_addEthereumChain\";\nconst defaultShowQrModal = true;\nconst storageKeys = {\n    requestedChains: \"tw.wc.requestedChains\",\n    lastUsedChainId: \"tw.wc.lastUsedChainId\"\n};\n/**\n * Checks if the provided wallet is a Wallet Connect wallet.\n *\n * @param wallet - The wallet to check.\n * @returns True if the wallet is a Wallet Connect wallet, false otherwise.\n */ function isWalletConnect(wallet) {\n    return wallet.id === \"walletConnect\";\n}\n/**\n * @internal\n */ async function connectWC(options, emitter, walletId, storage, sessionHandler) {\n    const provider = await initProvider(options, walletId, sessionHandler);\n    const wcOptions = options.walletConnect;\n    let { onDisplayUri } = wcOptions || {};\n    // use default sessionHandler unless onDisplayUri is explicitly provided\n    if (!onDisplayUri && sessionHandler && walletId !== \"walletConnect\") {\n        const walletInfo = await (0,_generated_getWalletInfo_js__WEBPACK_IMPORTED_MODULE_0__.getWalletInfo)(walletId);\n        const deeplinkHandler = (uri)=>{\n            const appUrl = walletInfo.mobile.native || walletInfo.mobile.universal;\n            if (!appUrl) {\n                throw new Error(\"No app url found for wallet connect to redirect to.\");\n            }\n            const fullUrl = (0,_utils_url_js__WEBPACK_IMPORTED_MODULE_1__.formatWalletConnectUrl)(appUrl, uri).redirect;\n            sessionHandler(fullUrl);\n        };\n        onDisplayUri = deeplinkHandler;\n    }\n    if (onDisplayUri) {\n        provider.events.addListener(\"display_uri\", onDisplayUri);\n    }\n    let optionalChains = wcOptions === null || wcOptions === void 0 ? void 0 : wcOptions.optionalChains;\n    let chainToRequest = options.chain;\n    // ignore the given options chains - and set the safe supported chains\n    if (walletId === \"global.safe\") {\n        optionalChains = chainsToRequestForSafe.map(_chains_utils_js__WEBPACK_IMPORTED_MODULE_2__.getCachedChain);\n        if (chainToRequest && !optionalChains.includes(chainToRequest)) {\n            chainToRequest = undefined;\n        }\n    }\n    const { rpcMap, requiredChain, optionalChains: chainsToRequest } = getChainsToRequest({\n        client: options.client,\n        chain: chainToRequest,\n        optionalChains: optionalChains\n    });\n    if (provider.session) {\n        await provider.connect({\n            ...(wcOptions === null || wcOptions === void 0 ? void 0 : wcOptions.pairingTopic) ? {\n                pairingTopic: wcOptions === null || wcOptions === void 0 ? void 0 : wcOptions.pairingTopic\n            } : {},\n            optionalChains: chainsToRequest,\n            chains: requiredChain ? [\n                requiredChain.id\n            ] : undefined,\n            rpcMap: rpcMap\n        });\n    }\n    setRequestedChainsIds(chainsToRequest, storage);\n    // If session exists and chains are authorized, enable provider for required chain\n    const addresses = await provider.enable();\n    const address = addresses[0];\n    if (!address) {\n        throw new Error(\"No accounts found on provider.\");\n    }\n    const providerChainId = (0,_utils_normalizeChainId_js__WEBPACK_IMPORTED_MODULE_3__.normalizeChainId)(provider.chainId);\n    const chain = options.chain && options.chain.id === providerChainId ? options.chain : (0,_chains_utils_js__WEBPACK_IMPORTED_MODULE_2__.getCachedChain)(providerChainId);\n    if (options) {\n        var _options_walletConnect, _options_walletConnect1;\n        const savedParams = {\n            optionalChains: (_options_walletConnect = options.walletConnect) === null || _options_walletConnect === void 0 ? void 0 : _options_walletConnect.optionalChains,\n            chain: options.chain,\n            pairingTopic: (_options_walletConnect1 = options.walletConnect) === null || _options_walletConnect1 === void 0 ? void 0 : _options_walletConnect1.pairingTopic\n        };\n        if (storage) {\n            (0,_utils_storage_walletStorage_js__WEBPACK_IMPORTED_MODULE_4__.saveConnectParamsToStorage)(storage, walletId, savedParams);\n        }\n    }\n    if (wcOptions === null || wcOptions === void 0 ? void 0 : wcOptions.onDisplayUri) {\n        provider.events.removeListener(\"display_uri\", wcOptions.onDisplayUri);\n    }\n    return onConnect(address, chain, provider, emitter, storage, options.client);\n}\n/**\n * Auto connect to already connected wallet connect session.\n * @internal\n */ async function autoConnectWC(options, emitter, walletId, storage, sessionHandler) {\n    const savedConnectParams = storage ? await (0,_utils_storage_walletStorage_js__WEBPACK_IMPORTED_MODULE_4__.getSavedConnectParamsFromStorage)(storage, walletId) : null;\n    const provider = await initProvider(savedConnectParams ? {\n        chain: savedConnectParams.chain,\n        client: options.client,\n        walletConnect: {\n            pairingTopic: savedConnectParams.pairingTopic,\n            optionalChains: savedConnectParams.optionalChains\n        }\n    } : {\n        client: options.client,\n        walletConnect: {}\n    }, walletId, sessionHandler, true);\n    const address = provider.accounts[0];\n    if (!address) {\n        throw new Error(\"No accounts found on provider.\");\n    }\n    const providerChainId = (0,_utils_normalizeChainId_js__WEBPACK_IMPORTED_MODULE_3__.normalizeChainId)(provider.chainId);\n    const chain = options.chain && options.chain.id === providerChainId ? options.chain : (0,_chains_utils_js__WEBPACK_IMPORTED_MODULE_2__.getCachedChain)(providerChainId);\n    return onConnect(address, chain, provider, emitter, storage, options.client);\n}\n// Connection utils -----------------------------------------------------------------------------------------------\nasync function initProvider(options, walletId, sessionRequestHandler) {\n    let isAutoConnect = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;\n    var _wcOptions_appMetadata, _wcOptions_appMetadata1, _wcOptions_appMetadata2, _wcOptions_appMetadata3;\n    const walletInfo = await (0,_generated_getWalletInfo_js__WEBPACK_IMPORTED_MODULE_0__.getWalletInfo)(walletId);\n    const wcOptions = options.walletConnect;\n    const { EthereumProvider, OPTIONAL_EVENTS, OPTIONAL_METHODS } = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_walletconnect_ethereum-provider_dist_index_es_js\").then(__webpack_require__.bind(__webpack_require__, /*! @walletconnect/ethereum-provider */ \"(app-pages-browser)/./node_modules/@walletconnect/ethereum-provider/dist/index.es.js\"));\n    let optionalChains = wcOptions === null || wcOptions === void 0 ? void 0 : wcOptions.optionalChains;\n    let chainToRequest = options.chain;\n    // ignore the given options chains - and set the safe supported chains\n    if (walletId === \"global.safe\") {\n        optionalChains = chainsToRequestForSafe.map(_chains_utils_js__WEBPACK_IMPORTED_MODULE_2__.getCachedChain);\n        if (chainToRequest && !optionalChains.includes(chainToRequest)) {\n            chainToRequest = undefined;\n        }\n    }\n    const { rpcMap, requiredChain, optionalChains: chainsToRequest } = getChainsToRequest({\n        client: options.client,\n        chain: chainToRequest,\n        optionalChains: optionalChains\n    });\n    const provider = await EthereumProvider.init({\n        showQrModal: (wcOptions === null || wcOptions === void 0 ? void 0 : wcOptions.showQrModal) === undefined ? sessionRequestHandler ? false : defaultShowQrModal : wcOptions.showQrModal,\n        projectId: (wcOptions === null || wcOptions === void 0 ? void 0 : wcOptions.projectId) || _constants_js__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_PROJECT_ID,\n        optionalMethods: OPTIONAL_METHODS,\n        optionalEvents: OPTIONAL_EVENTS,\n        optionalChains: chainsToRequest,\n        chains: requiredChain ? [\n            requiredChain.id\n        ] : undefined,\n        metadata: {\n            name: (wcOptions === null || wcOptions === void 0 ? void 0 : (_wcOptions_appMetadata = wcOptions.appMetadata) === null || _wcOptions_appMetadata === void 0 ? void 0 : _wcOptions_appMetadata.name) || (0,_utils_defaultDappMetadata_js__WEBPACK_IMPORTED_MODULE_6__.getDefaultAppMetadata)().name,\n            description: (wcOptions === null || wcOptions === void 0 ? void 0 : (_wcOptions_appMetadata1 = wcOptions.appMetadata) === null || _wcOptions_appMetadata1 === void 0 ? void 0 : _wcOptions_appMetadata1.description) || (0,_utils_defaultDappMetadata_js__WEBPACK_IMPORTED_MODULE_6__.getDefaultAppMetadata)().description,\n            url: (wcOptions === null || wcOptions === void 0 ? void 0 : (_wcOptions_appMetadata2 = wcOptions.appMetadata) === null || _wcOptions_appMetadata2 === void 0 ? void 0 : _wcOptions_appMetadata2.url) || (0,_utils_defaultDappMetadata_js__WEBPACK_IMPORTED_MODULE_6__.getDefaultAppMetadata)().url,\n            icons: [\n                (wcOptions === null || wcOptions === void 0 ? void 0 : (_wcOptions_appMetadata3 = wcOptions.appMetadata) === null || _wcOptions_appMetadata3 === void 0 ? void 0 : _wcOptions_appMetadata3.logoUrl) || (0,_utils_defaultDappMetadata_js__WEBPACK_IMPORTED_MODULE_6__.getDefaultAppMetadata)().logoUrl\n            ]\n        },\n        rpcMap: rpcMap,\n        qrModalOptions: wcOptions === null || wcOptions === void 0 ? void 0 : wcOptions.qrModalOptions,\n        disableProviderPing: true\n    });\n    provider.events.setMaxListeners(Number.POSITIVE_INFINITY);\n    // disconnect the provider if chains are stale when (if not auto connecting)\n    if (!isAutoConnect) {\n        // const isStale = await isChainsStale(provider, chainsToRequest);\n        if (provider.session) {\n            await provider.disconnect();\n        }\n    }\n    if (walletId !== \"walletConnect\") {\n        async function handleSessionRequest() {\n            var _provider_session_peer_metadata_redirect, _provider_session_peer_metadata, _provider_session_peer, _provider_session;\n            const walletLinkToOpen = ((_provider_session = provider.session) === null || _provider_session === void 0 ? void 0 : (_provider_session_peer = _provider_session.peer) === null || _provider_session_peer === void 0 ? void 0 : (_provider_session_peer_metadata = _provider_session_peer.metadata) === null || _provider_session_peer_metadata === void 0 ? void 0 : (_provider_session_peer_metadata_redirect = _provider_session_peer_metadata.redirect) === null || _provider_session_peer_metadata_redirect === void 0 ? void 0 : _provider_session_peer_metadata_redirect.native) || walletInfo.mobile.native || walletInfo.mobile.universal;\n            if (sessionRequestHandler && walletLinkToOpen) {\n                // TODO: propagate error when this fails\n                await sessionRequestHandler(walletLinkToOpen);\n            }\n        }\n        provider.signer.client.on(\"session_request_sent\", handleSessionRequest);\n        provider.events.addListener(\"disconnect\", ()=>{\n            provider.signer.client.off(\"session_request_sent\", handleSessionRequest);\n        });\n    }\n    return provider;\n}\nfunction createAccount(param) {\n    let { provider, address, client } = param;\n    const account = {\n        address: address,\n        async sendTransaction (tx) {\n            const transactionHash = await provider.request({\n                method: \"eth_sendTransaction\",\n                params: [\n                    {\n                        gas: tx.gas ? (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_7__.numberToHex)(tx.gas) : undefined,\n                        value: tx.value ? (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_7__.numberToHex)(tx.value) : undefined,\n                        from: (0,_utils_address_js__WEBPACK_IMPORTED_MODULE_8__.getAddress)(address),\n                        to: tx.to,\n                        data: tx.data\n                    }\n                ]\n            });\n            var _tx_to;\n            (0,_analytics_track_transaction_js__WEBPACK_IMPORTED_MODULE_9__.trackTransaction)({\n                client: client,\n                walletAddress: (0,_utils_address_js__WEBPACK_IMPORTED_MODULE_8__.getAddress)(address),\n                walletType: \"walletConnect\",\n                transactionHash,\n                chainId: tx.chainId,\n                contractAddress: (_tx_to = tx.to) !== null && _tx_to !== void 0 ? _tx_to : undefined,\n                gasPrice: tx.gasPrice\n            });\n            return {\n                transactionHash\n            };\n        },\n        async signMessage (param) {\n            let { message } = param;\n            const messageToSign = (()=>{\n                if (typeof message === \"string\") {\n                    return (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_7__.stringToHex)(message);\n                }\n                if (message.raw instanceof Uint8Array) {\n                    return (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_7__.uint8ArrayToHex)(message.raw);\n                }\n                return message.raw;\n            })();\n            return provider.request({\n                method: \"personal_sign\",\n                params: [\n                    messageToSign,\n                    this.address\n                ]\n            });\n        },\n        async signTypedData (_data) {\n            const data = (0,_utils_signatures_helpers_parse_typed_data_js__WEBPACK_IMPORTED_MODULE_10__.parseTypedData)(_data);\n            const { domain, message, primaryType } = data;\n            const types = {\n                EIP712Domain: (0,viem__WEBPACK_IMPORTED_MODULE_11__.getTypesForEIP712Domain)({\n                    domain\n                }),\n                ...data.types\n            };\n            // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc\n            // as we can't statically check this with TypeScript.\n            (0,viem__WEBPACK_IMPORTED_MODULE_11__.validateTypedData)({\n                domain,\n                message,\n                primaryType,\n                types\n            });\n            const typedData = (0,viem__WEBPACK_IMPORTED_MODULE_11__.serializeTypedData)({\n                domain: domain !== null && domain !== void 0 ? domain : {},\n                message,\n                primaryType,\n                types\n            });\n            return await provider.request({\n                method: \"eth_signTypedData_v4\",\n                params: [\n                    this.address,\n                    typedData\n                ]\n            });\n        }\n    };\n    return account;\n}\nfunction onConnect(address, chain, provider, emitter, storage, client) {\n    const account = createAccount({\n        provider,\n        address,\n        client\n    });\n    async function disconnect() {\n        provider.removeListener(\"accountsChanged\", onAccountsChanged);\n        provider.removeListener(\"chainChanged\", onChainChanged);\n        provider.removeListener(\"disconnect\", onDisconnect);\n        await provider.disconnect();\n    }\n    function onDisconnect() {\n        setRequestedChainsIds([], storage);\n        storage === null || storage === void 0 ? void 0 : storage.removeItem(storageKeys.lastUsedChainId);\n        disconnect();\n        emitter.emit(\"disconnect\", undefined);\n    }\n    function onAccountsChanged(accounts) {\n        if (accounts[0]) {\n            const newAccount = createAccount({\n                provider,\n                address: (0,_utils_address_js__WEBPACK_IMPORTED_MODULE_8__.getAddress)(accounts[0]),\n                client\n            });\n            emitter.emit(\"accountChanged\", newAccount);\n            emitter.emit(\"accountsChanged\", accounts);\n        } else {\n            onDisconnect();\n        }\n    }\n    function onChainChanged(newChainId) {\n        const newChain = (0,_chains_utils_js__WEBPACK_IMPORTED_MODULE_2__.getCachedChain)((0,_utils_normalizeChainId_js__WEBPACK_IMPORTED_MODULE_3__.normalizeChainId)(newChainId));\n        emitter.emit(\"chainChanged\", newChain);\n        storage === null || storage === void 0 ? void 0 : storage.setItem(storageKeys.lastUsedChainId, String(newChainId));\n    }\n    provider.on(\"accountsChanged\", onAccountsChanged);\n    provider.on(\"chainChanged\", onChainChanged);\n    provider.on(\"disconnect\", onDisconnect);\n    provider.on(\"session_delete\", onDisconnect);\n    return [\n        account,\n        chain,\n        disconnect,\n        (newChain)=>switchChainWC(provider, newChain, storage)\n    ];\n}\n// Storage utils  -----------------------------------------------------------------------------------------------\nfunction getNamespaceMethods(provider) {\n    var _provider_session_namespaces_NAMESPACE, _provider_session;\n    return ((_provider_session = provider.session) === null || _provider_session === void 0 ? void 0 : (_provider_session_namespaces_NAMESPACE = _provider_session.namespaces[_constants_js__WEBPACK_IMPORTED_MODULE_5__.NAMESPACE]) === null || _provider_session_namespaces_NAMESPACE === void 0 ? void 0 : _provider_session_namespaces_NAMESPACE.methods) || [];\n}\nfunction getNamespaceChainsIds(provider) {\n    var _provider_session_namespaces_NAMESPACE_chains, _provider_session_namespaces_NAMESPACE, _provider_session;\n    const chainIds = (_provider_session = provider.session) === null || _provider_session === void 0 ? void 0 : (_provider_session_namespaces_NAMESPACE = _provider_session.namespaces[_constants_js__WEBPACK_IMPORTED_MODULE_5__.NAMESPACE]) === null || _provider_session_namespaces_NAMESPACE === void 0 ? void 0 : (_provider_session_namespaces_NAMESPACE_chains = _provider_session_namespaces_NAMESPACE.chains) === null || _provider_session_namespaces_NAMESPACE_chains === void 0 ? void 0 : _provider_session_namespaces_NAMESPACE_chains.map((chain)=>Number.parseInt(chain.split(\":\")[1] || \"\"));\n    return chainIds !== null && chainIds !== void 0 ? chainIds : [];\n}\nasync function switchChainWC(provider, chain, storage) {\n    const chainId = chain.id;\n    try {\n        const namespaceChains = getNamespaceChainsIds(provider);\n        const namespaceMethods = getNamespaceMethods(provider);\n        const isChainApproved = namespaceChains.includes(chainId);\n        if (!isChainApproved && namespaceMethods.includes(ADD_ETH_CHAIN_METHOD)) {\n            var _chain_blockExplorers, _apiChain_explorers;\n            const apiChain = await (0,_chains_utils_js__WEBPACK_IMPORTED_MODULE_2__.getChainMetadata)(chain);\n            const blockExplorerUrls = [\n                ...new Set([\n                    ...((_chain_blockExplorers = chain.blockExplorers) === null || _chain_blockExplorers === void 0 ? void 0 : _chain_blockExplorers.map((x)=>x.url)) || [],\n                    ...((_apiChain_explorers = apiChain.explorers) === null || _apiChain_explorers === void 0 ? void 0 : _apiChain_explorers.map((x)=>x.url)) || []\n                ])\n            ];\n            await provider.request({\n                method: ADD_ETH_CHAIN_METHOD,\n                params: [\n                    {\n                        chainId: (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_7__.numberToHex)(apiChain.chainId),\n                        chainName: apiChain.name,\n                        nativeCurrency: apiChain.nativeCurrency,\n                        rpcUrls: (0,_utils_chains_js__WEBPACK_IMPORTED_MODULE_12__.getValidPublicRPCUrl)(apiChain),\n                        blockExplorerUrls: blockExplorerUrls.length > 0 ? blockExplorerUrls : undefined\n                    }\n                ]\n            });\n            const requestedChains = await getRequestedChainsIds(storage);\n            requestedChains.push(chainId);\n            setRequestedChainsIds(requestedChains, storage);\n        }\n        await provider.request({\n            method: \"wallet_switchEthereumChain\",\n            params: [\n                {\n                    chainId: (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_7__.numberToHex)(chainId)\n                }\n            ]\n        });\n    } catch (error) {\n        const message = typeof error === \"string\" ? error : error === null || error === void 0 ? void 0 : error.message;\n        if (/user rejected request/i.test(message)) {\n            throw new viem__WEBPACK_IMPORTED_MODULE_13__.UserRejectedRequestError(error);\n        }\n        throw new viem__WEBPACK_IMPORTED_MODULE_13__.SwitchChainError(error);\n    }\n}\n/**\n * Set the requested chains to the storage.\n * @internal\n */ function setRequestedChainsIds(chains, storage) {\n    storage === null || storage === void 0 ? void 0 : storage.setItem(storageKeys.requestedChains, (0,_utils_json_js__WEBPACK_IMPORTED_MODULE_14__.stringify)(chains));\n}\n/**\n * Get the last requested chains from the storage.\n * @internal\n */ async function getRequestedChainsIds(storage) {\n    const data = await storage.getItem(storageKeys.requestedChains);\n    return data ? JSON.parse(data) : [];\n}\nfunction getChainsToRequest(options) {\n    const rpcMap = {};\n    if (options.chain) {\n        rpcMap[options.chain.id] = (0,_chains_utils_js__WEBPACK_IMPORTED_MODULE_2__.getRpcUrlForChain)({\n            chain: options.chain,\n            client: options.client\n        });\n    }\n    // limit optional chains to 10\n    const optionalChains = ((options === null || options === void 0 ? void 0 : options.optionalChains) || []).slice(0, 10);\n    for (const chain of optionalChains){\n        rpcMap[chain.id] = (0,_chains_utils_js__WEBPACK_IMPORTED_MODULE_2__.getRpcUrlForChain)({\n            chain: chain,\n            client: options.client\n        });\n    }\n    if (!options.chain && optionalChains.length === 0) {\n        rpcMap[1] = (0,_chains_utils_js__WEBPACK_IMPORTED_MODULE_2__.getCachedChain)(1).rpc;\n    }\n    return {\n        rpcMap,\n        requiredChain: options.chain ? options.chain : undefined,\n        optionalChains: optionalChains.length > 0 ? optionalChains.map((x)=>x.id) : [\n            1\n        ]\n    };\n}\nconst chainsToRequestForSafe = [\n    1,\n    11155111,\n    42161,\n    43114,\n    8453,\n    1313161554,\n    84532,\n    56,\n    42220,\n    100,\n    10,\n    137,\n    1101,\n    324,\n    534352\n]; //# sourceMappingURL=controller.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/wallet-connect/controller.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/viem/_esm/errors/request.js":
/*!**************************************************!*\
  !*** ./node_modules/viem/_esm/errors/request.js ***!
  \**************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpRequestError: function() { return /* binding */ HttpRequestError; },\n/* harmony export */   RpcRequestError: function() { return /* binding */ RpcRequestError; },\n/* harmony export */   SocketClosedError: function() { return /* binding */ SocketClosedError; },\n/* harmony export */   TimeoutError: function() { return /* binding */ TimeoutError; },\n/* harmony export */   WebSocketRequestError: function() { return /* binding */ WebSocketRequestError; }\n/* harmony export */ });\n/* harmony import */ var _utils_stringify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/stringify.js */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/stringify.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(app-pages-browser)/./node_modules/viem/_esm/errors/base.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/viem/_esm/errors/utils.js\");\n\n\n\nclass HttpRequestError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor({ body, cause, details, headers, status, url }){\n        super(\"HTTP request failed.\", {\n            cause,\n            details,\n            metaMessages: [\n                status && \"Status: \".concat(status),\n                \"URL: \".concat((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getUrl)(url)),\n                body && \"Request body: \".concat((0,_utils_stringify_js__WEBPACK_IMPORTED_MODULE_2__.stringify)(body))\n            ].filter(Boolean),\n            name: \"HttpRequestError\"\n        });\n        Object.defineProperty(this, \"body\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"status\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"url\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.body = body;\n        this.headers = headers;\n        this.status = status;\n        this.url = url;\n    }\n}\nclass WebSocketRequestError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor({ body, cause, details, url }){\n        super(\"WebSocket request failed.\", {\n            cause,\n            details,\n            metaMessages: [\n                \"URL: \".concat((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getUrl)(url)),\n                body && \"Request body: \".concat((0,_utils_stringify_js__WEBPACK_IMPORTED_MODULE_2__.stringify)(body))\n            ].filter(Boolean),\n            name: \"WebSocketRequestError\"\n        });\n    }\n}\nclass RpcRequestError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor({ body, error, url }){\n        super(\"RPC Request failed.\", {\n            cause: error,\n            details: error.message,\n            metaMessages: [\n                \"URL: \".concat((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getUrl)(url)),\n                \"Request body: \".concat((0,_utils_stringify_js__WEBPACK_IMPORTED_MODULE_2__.stringify)(body))\n            ],\n            name: \"RpcRequestError\"\n        });\n        Object.defineProperty(this, \"code\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.code = error.code;\n    }\n}\nclass SocketClosedError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor({ url } = {}){\n        super(\"The socket has been closed.\", {\n            metaMessages: [\n                url && \"URL: \".concat((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getUrl)(url))\n            ].filter(Boolean),\n            name: \"SocketClosedError\"\n        });\n    }\n}\nclass TimeoutError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor({ body, url }){\n        super(\"The request took too long to respond.\", {\n            details: \"The request timed out.\",\n            metaMessages: [\n                \"URL: \".concat((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getUrl)(url)),\n                \"Request body: \".concat((0,_utils_stringify_js__WEBPACK_IMPORTED_MODULE_2__.stringify)(body))\n            ],\n            name: \"TimeoutError\"\n        });\n    }\n} //# sourceMappingURL=request.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy92aWVtL19lc20vZXJyb3JzL3JlcXVlc3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBa0Q7QUFDWjtBQUNGO0FBQzdCLE1BQU1HLHlCQUF5QkYsK0NBQVNBO0lBQzNDRyxZQUFZLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFQyxPQUFPLEVBQUVDLE9BQU8sRUFBRUMsTUFBTSxFQUFFQyxHQUFHLEVBQUcsQ0FBRTtRQUN6RCxLQUFLLENBQUMsd0JBQXdCO1lBQzFCSjtZQUNBQztZQUNBSSxjQUFjO2dCQUNWRixVQUFVLFdBQWtCLE9BQVBBO2dCQUNwQixRQUFtQixPQUFaUCxpREFBTUEsQ0FBQ1E7Z0JBQ2ZMLFFBQVEsaUJBQWlDLE9BQWhCTCw4REFBU0EsQ0FBQ0s7YUFDdEMsQ0FBQ08sTUFBTSxDQUFDQztZQUNUQyxNQUFNO1FBQ1Y7UUFDQUMsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRSxRQUFRO1lBQ2hDQyxZQUFZO1lBQ1pDLGNBQWM7WUFDZEMsVUFBVTtZQUNWQyxPQUFPLEtBQUs7UUFDaEI7UUFDQUwsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRSxXQUFXO1lBQ25DQyxZQUFZO1lBQ1pDLGNBQWM7WUFDZEMsVUFBVTtZQUNWQyxPQUFPLEtBQUs7UUFDaEI7UUFDQUwsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRSxVQUFVO1lBQ2xDQyxZQUFZO1lBQ1pDLGNBQWM7WUFDZEMsVUFBVTtZQUNWQyxPQUFPLEtBQUs7UUFDaEI7UUFDQUwsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRSxPQUFPO1lBQy9CQyxZQUFZO1lBQ1pDLGNBQWM7WUFDZEMsVUFBVTtZQUNWQyxPQUFPLEtBQUs7UUFDaEI7UUFDQSxJQUFJLENBQUNmLElBQUksR0FBR0E7UUFDWixJQUFJLENBQUNHLE9BQU8sR0FBR0E7UUFDZixJQUFJLENBQUNDLE1BQU0sR0FBR0E7UUFDZCxJQUFJLENBQUNDLEdBQUcsR0FBR0E7SUFDZjtBQUNKO0FBQ08sTUFBTVcsOEJBQThCcEIsK0NBQVNBO0lBQ2hERyxZQUFZLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFQyxPQUFPLEVBQUVHLEdBQUcsRUFBRyxDQUFFO1FBQ3hDLEtBQUssQ0FBQyw2QkFBNkI7WUFDL0JKO1lBQ0FDO1lBQ0FJLGNBQWM7Z0JBQ1QsUUFBbUIsT0FBWlQsaURBQU1BLENBQUNRO2dCQUNmTCxRQUFRLGlCQUFpQyxPQUFoQkwsOERBQVNBLENBQUNLO2FBQ3RDLENBQUNPLE1BQU0sQ0FBQ0M7WUFDVEMsTUFBTTtRQUNWO0lBQ0o7QUFDSjtBQUNPLE1BQU1RLHdCQUF3QnJCLCtDQUFTQTtJQUMxQ0csWUFBWSxFQUFFQyxJQUFJLEVBQUVrQixLQUFLLEVBQUViLEdBQUcsRUFBRyxDQUFFO1FBQy9CLEtBQUssQ0FBQyx1QkFBdUI7WUFDekJKLE9BQU9pQjtZQUNQaEIsU0FBU2dCLE1BQU1DLE9BQU87WUFDdEJiLGNBQWM7Z0JBQUUsUUFBbUIsT0FBWlQsaURBQU1BLENBQUNRO2dCQUFTLGlCQUFnQyxPQUFoQlYsOERBQVNBLENBQUNLO2FBQVE7WUFDekVTLE1BQU07UUFDVjtRQUNBQyxPQUFPQyxjQUFjLENBQUMsSUFBSSxFQUFFLFFBQVE7WUFDaENDLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1lBQ1ZDLE9BQU8sS0FBSztRQUNoQjtRQUNBLElBQUksQ0FBQ0ssSUFBSSxHQUFHRixNQUFNRSxJQUFJO0lBQzFCO0FBQ0o7QUFDTyxNQUFNQywwQkFBMEJ6QiwrQ0FBU0E7SUFDNUNHLFlBQVksRUFBRU0sR0FBRyxFQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUU7UUFDdkIsS0FBSyxDQUFDLCtCQUErQjtZQUNqQ0MsY0FBYztnQkFBQ0QsT0FBTyxRQUFvQixPQUFaUixpREFBTUEsQ0FBQ1E7YUFBTyxDQUFDRSxNQUFNLENBQUNDO1lBQ3BEQyxNQUFNO1FBQ1Y7SUFDSjtBQUNKO0FBQ08sTUFBTWEscUJBQXFCMUIsK0NBQVNBO0lBQ3ZDRyxZQUFZLEVBQUVDLElBQUksRUFBRUssR0FBRyxFQUFHLENBQUU7UUFDeEIsS0FBSyxDQUFDLHlDQUF5QztZQUMzQ0gsU0FBUztZQUNUSSxjQUFjO2dCQUFFLFFBQW1CLE9BQVpULGlEQUFNQSxDQUFDUTtnQkFBUyxpQkFBZ0MsT0FBaEJWLDhEQUFTQSxDQUFDSzthQUFRO1lBQ3pFUyxNQUFNO1FBQ1Y7SUFDSjtBQUNKLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy92aWVtL19lc20vZXJyb3JzL3JlcXVlc3QuanM/NDJlMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHJpbmdpZnkgfSBmcm9tICcuLi91dGlscy9zdHJpbmdpZnkuanMnO1xuaW1wb3J0IHsgQmFzZUVycm9yIH0gZnJvbSAnLi9iYXNlLmpzJztcbmltcG9ydCB7IGdldFVybCB9IGZyb20gJy4vdXRpbHMuanMnO1xuZXhwb3J0IGNsYXNzIEh0dHBSZXF1ZXN0RXJyb3IgZXh0ZW5kcyBCYXNlRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHsgYm9keSwgY2F1c2UsIGRldGFpbHMsIGhlYWRlcnMsIHN0YXR1cywgdXJsLCB9KSB7XG4gICAgICAgIHN1cGVyKCdIVFRQIHJlcXVlc3QgZmFpbGVkLicsIHtcbiAgICAgICAgICAgIGNhdXNlLFxuICAgICAgICAgICAgZGV0YWlscyxcbiAgICAgICAgICAgIG1ldGFNZXNzYWdlczogW1xuICAgICAgICAgICAgICAgIHN0YXR1cyAmJiBgU3RhdHVzOiAke3N0YXR1c31gLFxuICAgICAgICAgICAgICAgIGBVUkw6ICR7Z2V0VXJsKHVybCl9YCxcbiAgICAgICAgICAgICAgICBib2R5ICYmIGBSZXF1ZXN0IGJvZHk6ICR7c3RyaW5naWZ5KGJvZHkpfWAsXG4gICAgICAgICAgICBdLmZpbHRlcihCb29sZWFuKSxcbiAgICAgICAgICAgIG5hbWU6ICdIdHRwUmVxdWVzdEVycm9yJyxcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImJvZHlcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiaGVhZGVyc1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJzdGF0dXNcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwidXJsXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuYm9keSA9IGJvZHk7XG4gICAgICAgIHRoaXMuaGVhZGVycyA9IGhlYWRlcnM7XG4gICAgICAgIHRoaXMuc3RhdHVzID0gc3RhdHVzO1xuICAgICAgICB0aGlzLnVybCA9IHVybDtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgV2ViU29ja2V0UmVxdWVzdEVycm9yIGV4dGVuZHMgQmFzZUVycm9yIHtcbiAgICBjb25zdHJ1Y3Rvcih7IGJvZHksIGNhdXNlLCBkZXRhaWxzLCB1cmwsIH0pIHtcbiAgICAgICAgc3VwZXIoJ1dlYlNvY2tldCByZXF1ZXN0IGZhaWxlZC4nLCB7XG4gICAgICAgICAgICBjYXVzZSxcbiAgICAgICAgICAgIGRldGFpbHMsXG4gICAgICAgICAgICBtZXRhTWVzc2FnZXM6IFtcbiAgICAgICAgICAgICAgICBgVVJMOiAke2dldFVybCh1cmwpfWAsXG4gICAgICAgICAgICAgICAgYm9keSAmJiBgUmVxdWVzdCBib2R5OiAke3N0cmluZ2lmeShib2R5KX1gLFxuICAgICAgICAgICAgXS5maWx0ZXIoQm9vbGVhbiksXG4gICAgICAgICAgICBuYW1lOiAnV2ViU29ja2V0UmVxdWVzdEVycm9yJyxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFJwY1JlcXVlc3RFcnJvciBleHRlbmRzIEJhc2VFcnJvciB7XG4gICAgY29uc3RydWN0b3IoeyBib2R5LCBlcnJvciwgdXJsLCB9KSB7XG4gICAgICAgIHN1cGVyKCdSUEMgUmVxdWVzdCBmYWlsZWQuJywge1xuICAgICAgICAgICAgY2F1c2U6IGVycm9yLFxuICAgICAgICAgICAgZGV0YWlsczogZXJyb3IubWVzc2FnZSxcbiAgICAgICAgICAgIG1ldGFNZXNzYWdlczogW2BVUkw6ICR7Z2V0VXJsKHVybCl9YCwgYFJlcXVlc3QgYm9keTogJHtzdHJpbmdpZnkoYm9keSl9YF0sXG4gICAgICAgICAgICBuYW1lOiAnUnBjUmVxdWVzdEVycm9yJyxcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImNvZGVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5jb2RlID0gZXJyb3IuY29kZTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgU29ja2V0Q2xvc2VkRXJyb3IgZXh0ZW5kcyBCYXNlRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHsgdXJsLCB9ID0ge30pIHtcbiAgICAgICAgc3VwZXIoJ1RoZSBzb2NrZXQgaGFzIGJlZW4gY2xvc2VkLicsIHtcbiAgICAgICAgICAgIG1ldGFNZXNzYWdlczogW3VybCAmJiBgVVJMOiAke2dldFVybCh1cmwpfWBdLmZpbHRlcihCb29sZWFuKSxcbiAgICAgICAgICAgIG5hbWU6ICdTb2NrZXRDbG9zZWRFcnJvcicsXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBUaW1lb3V0RXJyb3IgZXh0ZW5kcyBCYXNlRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHsgYm9keSwgdXJsLCB9KSB7XG4gICAgICAgIHN1cGVyKCdUaGUgcmVxdWVzdCB0b29rIHRvbyBsb25nIHRvIHJlc3BvbmQuJywge1xuICAgICAgICAgICAgZGV0YWlsczogJ1RoZSByZXF1ZXN0IHRpbWVkIG91dC4nLFxuICAgICAgICAgICAgbWV0YU1lc3NhZ2VzOiBbYFVSTDogJHtnZXRVcmwodXJsKX1gLCBgUmVxdWVzdCBib2R5OiAke3N0cmluZ2lmeShib2R5KX1gXSxcbiAgICAgICAgICAgIG5hbWU6ICdUaW1lb3V0RXJyb3InLFxuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0LmpzLm1hcCJdLCJuYW1lcyI6WyJzdHJpbmdpZnkiLCJCYXNlRXJyb3IiLCJnZXRVcmwiLCJIdHRwUmVxdWVzdEVycm9yIiwiY29uc3RydWN0b3IiLCJib2R5IiwiY2F1c2UiLCJkZXRhaWxzIiwiaGVhZGVycyIsInN0YXR1cyIsInVybCIsIm1ldGFNZXNzYWdlcyIsImZpbHRlciIsIkJvb2xlYW4iLCJuYW1lIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJ2YWx1ZSIsIldlYlNvY2tldFJlcXVlc3RFcnJvciIsIlJwY1JlcXVlc3RFcnJvciIsImVycm9yIiwibWVzc2FnZSIsImNvZGUiLCJTb2NrZXRDbG9zZWRFcnJvciIsIlRpbWVvdXRFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/viem/_esm/errors/request.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/viem/_esm/errors/rpc.js":
/*!**********************************************!*\
  !*** ./node_modules/viem/_esm/errors/rpc.js ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChainDisconnectedError: function() { return /* binding */ ChainDisconnectedError; },\n/* harmony export */   InternalRpcError: function() { return /* binding */ InternalRpcError; },\n/* harmony export */   InvalidInputRpcError: function() { return /* binding */ InvalidInputRpcError; },\n/* harmony export */   InvalidParamsRpcError: function() { return /* binding */ InvalidParamsRpcError; },\n/* harmony export */   InvalidRequestRpcError: function() { return /* binding */ InvalidRequestRpcError; },\n/* harmony export */   JsonRpcVersionUnsupportedError: function() { return /* binding */ JsonRpcVersionUnsupportedError; },\n/* harmony export */   LimitExceededRpcError: function() { return /* binding */ LimitExceededRpcError; },\n/* harmony export */   MethodNotFoundRpcError: function() { return /* binding */ MethodNotFoundRpcError; },\n/* harmony export */   MethodNotSupportedRpcError: function() { return /* binding */ MethodNotSupportedRpcError; },\n/* harmony export */   ParseRpcError: function() { return /* binding */ ParseRpcError; },\n/* harmony export */   ProviderDisconnectedError: function() { return /* binding */ ProviderDisconnectedError; },\n/* harmony export */   ProviderRpcError: function() { return /* binding */ ProviderRpcError; },\n/* harmony export */   ResourceNotFoundRpcError: function() { return /* binding */ ResourceNotFoundRpcError; },\n/* harmony export */   ResourceUnavailableRpcError: function() { return /* binding */ ResourceUnavailableRpcError; },\n/* harmony export */   RpcError: function() { return /* binding */ RpcError; },\n/* harmony export */   SwitchChainError: function() { return /* binding */ SwitchChainError; },\n/* harmony export */   TransactionRejectedRpcError: function() { return /* binding */ TransactionRejectedRpcError; },\n/* harmony export */   UnauthorizedProviderError: function() { return /* binding */ UnauthorizedProviderError; },\n/* harmony export */   UnknownRpcError: function() { return /* binding */ UnknownRpcError; },\n/* harmony export */   UnsupportedProviderMethodError: function() { return /* binding */ UnsupportedProviderMethodError; },\n/* harmony export */   UserRejectedRequestError: function() { return /* binding */ UserRejectedRequestError; }\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(app-pages-browser)/./node_modules/viem/_esm/errors/base.js\");\n/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./request.js */ \"(app-pages-browser)/./node_modules/viem/_esm/errors/request.js\");\n\n\nconst unknownErrorCode = -1;\nclass RpcError extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseError {\n    constructor(cause, { code, docsPath, metaMessages, name, shortMessage }){\n        super(shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: metaMessages || (cause === null || cause === void 0 ? void 0 : cause.metaMessages),\n            name: name || \"RpcError\"\n        });\n        Object.defineProperty(this, \"code\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = name || cause.name;\n        this.code = cause instanceof _request_js__WEBPACK_IMPORTED_MODULE_1__.RpcRequestError ? cause.code : code !== null && code !== void 0 ? code : unknownErrorCode;\n    }\n}\nclass ProviderRpcError extends RpcError {\n    constructor(cause, options){\n        super(cause, options);\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.data = options.data;\n    }\n}\nclass ParseRpcError extends RpcError {\n    constructor(cause){\n        super(cause, {\n            code: ParseRpcError.code,\n            name: \"ParseRpcError\",\n            shortMessage: \"Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.\"\n        });\n    }\n}\nObject.defineProperty(ParseRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32700\n});\nclass InvalidRequestRpcError extends RpcError {\n    constructor(cause){\n        super(cause, {\n            code: InvalidRequestRpcError.code,\n            name: \"InvalidRequestRpcError\",\n            shortMessage: \"JSON is not a valid request object.\"\n        });\n    }\n}\nObject.defineProperty(InvalidRequestRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32600\n});\nclass MethodNotFoundRpcError extends RpcError {\n    constructor(cause, { method } = {}){\n        super(cause, {\n            code: MethodNotFoundRpcError.code,\n            name: \"MethodNotFoundRpcError\",\n            shortMessage: \"The method\".concat(method ? ' \"'.concat(method, '\"') : \"\", \" does not exist / is not available.\")\n        });\n    }\n}\nObject.defineProperty(MethodNotFoundRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32601\n});\nclass InvalidParamsRpcError extends RpcError {\n    constructor(cause){\n        super(cause, {\n            code: InvalidParamsRpcError.code,\n            name: \"InvalidParamsRpcError\",\n            shortMessage: [\n                \"Invalid parameters were provided to the RPC method.\",\n                \"Double check you have provided the correct parameters.\"\n            ].join(\"\\n\")\n        });\n    }\n}\nObject.defineProperty(InvalidParamsRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32602\n});\nclass InternalRpcError extends RpcError {\n    constructor(cause){\n        super(cause, {\n            code: InternalRpcError.code,\n            name: \"InternalRpcError\",\n            shortMessage: \"An internal error was received.\"\n        });\n    }\n}\nObject.defineProperty(InternalRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32603\n});\nclass InvalidInputRpcError extends RpcError {\n    constructor(cause){\n        super(cause, {\n            code: InvalidInputRpcError.code,\n            name: \"InvalidInputRpcError\",\n            shortMessage: [\n                \"Missing or invalid parameters.\",\n                \"Double check you have provided the correct parameters.\"\n            ].join(\"\\n\")\n        });\n    }\n}\nObject.defineProperty(InvalidInputRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32000\n});\nclass ResourceNotFoundRpcError extends RpcError {\n    constructor(cause){\n        super(cause, {\n            code: ResourceNotFoundRpcError.code,\n            name: \"ResourceNotFoundRpcError\",\n            shortMessage: \"Requested resource not found.\"\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ResourceNotFoundRpcError\"\n        });\n    }\n}\nObject.defineProperty(ResourceNotFoundRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32001\n});\nclass ResourceUnavailableRpcError extends RpcError {\n    constructor(cause){\n        super(cause, {\n            code: ResourceUnavailableRpcError.code,\n            name: \"ResourceUnavailableRpcError\",\n            shortMessage: \"Requested resource not available.\"\n        });\n    }\n}\nObject.defineProperty(ResourceUnavailableRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32002\n});\nclass TransactionRejectedRpcError extends RpcError {\n    constructor(cause){\n        super(cause, {\n            code: TransactionRejectedRpcError.code,\n            name: \"TransactionRejectedRpcError\",\n            shortMessage: \"Transaction creation failed.\"\n        });\n    }\n}\nObject.defineProperty(TransactionRejectedRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32003\n});\nclass MethodNotSupportedRpcError extends RpcError {\n    constructor(cause, { method } = {}){\n        super(cause, {\n            code: MethodNotSupportedRpcError.code,\n            name: \"MethodNotSupportedRpcError\",\n            shortMessage: \"Method\".concat(method ? ' \"'.concat(method, '\"') : \"\", \" is not implemented.\")\n        });\n    }\n}\nObject.defineProperty(MethodNotSupportedRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32004\n});\nclass LimitExceededRpcError extends RpcError {\n    constructor(cause){\n        super(cause, {\n            code: LimitExceededRpcError.code,\n            name: \"LimitExceededRpcError\",\n            shortMessage: \"Request exceeds defined limit.\"\n        });\n    }\n}\nObject.defineProperty(LimitExceededRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32005\n});\nclass JsonRpcVersionUnsupportedError extends RpcError {\n    constructor(cause){\n        super(cause, {\n            code: JsonRpcVersionUnsupportedError.code,\n            name: \"JsonRpcVersionUnsupportedError\",\n            shortMessage: \"Version of JSON-RPC protocol is not supported.\"\n        });\n    }\n}\nObject.defineProperty(JsonRpcVersionUnsupportedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32006\n});\nclass UserRejectedRequestError extends ProviderRpcError {\n    constructor(cause){\n        super(cause, {\n            code: UserRejectedRequestError.code,\n            name: \"UserRejectedRequestError\",\n            shortMessage: \"User rejected the request.\"\n        });\n    }\n}\nObject.defineProperty(UserRejectedRequestError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 4001\n});\nclass UnauthorizedProviderError extends ProviderRpcError {\n    constructor(cause){\n        super(cause, {\n            code: UnauthorizedProviderError.code,\n            name: \"UnauthorizedProviderError\",\n            shortMessage: \"The requested method and/or account has not been authorized by the user.\"\n        });\n    }\n}\nObject.defineProperty(UnauthorizedProviderError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 4100\n});\nclass UnsupportedProviderMethodError extends ProviderRpcError {\n    constructor(cause, { method } = {}){\n        super(cause, {\n            code: UnsupportedProviderMethodError.code,\n            name: \"UnsupportedProviderMethodError\",\n            shortMessage: \"The Provider does not support the requested method\".concat(method ? ' \" '.concat(method, '\"') : \"\", \".\")\n        });\n    }\n}\nObject.defineProperty(UnsupportedProviderMethodError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 4200\n});\nclass ProviderDisconnectedError extends ProviderRpcError {\n    constructor(cause){\n        super(cause, {\n            code: ProviderDisconnectedError.code,\n            name: \"ProviderDisconnectedError\",\n            shortMessage: \"The Provider is disconnected from all chains.\"\n        });\n    }\n}\nObject.defineProperty(ProviderDisconnectedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 4900\n});\nclass ChainDisconnectedError extends ProviderRpcError {\n    constructor(cause){\n        super(cause, {\n            code: ChainDisconnectedError.code,\n            name: \"ChainDisconnectedError\",\n            shortMessage: \"The Provider is not connected to the requested chain.\"\n        });\n    }\n}\nObject.defineProperty(ChainDisconnectedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 4901\n});\nclass SwitchChainError extends ProviderRpcError {\n    constructor(cause){\n        super(cause, {\n            code: SwitchChainError.code,\n            name: \"SwitchChainError\",\n            shortMessage: \"An error occurred when attempting to switch chain.\"\n        });\n    }\n}\nObject.defineProperty(SwitchChainError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 4902\n});\nclass UnknownRpcError extends RpcError {\n    constructor(cause){\n        super(cause, {\n            name: \"UnknownRpcError\",\n            shortMessage: \"An unknown RPC error occurred.\"\n        });\n    }\n} //# sourceMappingURL=rpc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/viem/_esm/errors/rpc.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/viem/_esm/errors/utils.js":
/*!************************************************!*\
  !*** ./node_modules/viem/_esm/errors/utils.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getContractAddress: function() { return /* binding */ getContractAddress; },\n/* harmony export */   getUrl: function() { return /* binding */ getUrl; }\n/* harmony export */ });\nconst getContractAddress = (address)=>address;\nconst getUrl = (url)=>url; //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy92aWVtL19lc20vZXJyb3JzL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sTUFBTUEscUJBQXFCLENBQUNDLFVBQVlBLFFBQVE7QUFDaEQsTUFBTUMsU0FBUyxDQUFDQyxNQUFRQSxJQUFJLENBQ25DLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdmllbS9fZXNtL2Vycm9ycy91dGlscy5qcz84NDI3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBnZXRDb250cmFjdEFkZHJlc3MgPSAoYWRkcmVzcykgPT4gYWRkcmVzcztcbmV4cG9ydCBjb25zdCBnZXRVcmwgPSAodXJsKSA9PiB1cmw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0Q29udHJhY3RBZGRyZXNzIiwiYWRkcmVzcyIsImdldFVybCIsInVybCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/viem/_esm/errors/utils.js\n"));

/***/ })

}]);